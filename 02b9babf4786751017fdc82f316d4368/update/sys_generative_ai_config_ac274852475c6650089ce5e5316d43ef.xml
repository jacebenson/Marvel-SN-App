<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_generative_ai_config">
    <sys_generative_ai_config action="INSERT_OR_UPDATE">
        <active>true</active>
        <additional_configurations>{"skill_config_id":"3b4bcd19415022107f449aa8e6578a84"}</additional_configurations>
        <ai_suggested>false</ai_suggested>
        <definition>634bcd19415022107f449aa8e6578a2c</definition>
        <definition_table>sys_one_extend_capability_definition</definition_table>
        <max_tokens>1000</max_tokens>
        <min_word_count>-1</min_word_count>
        <model>llm_generic</model>
        <name>Gameplay Suggestion</name>
        <parent display_value="OneExtend Capability Definition: SN App Gameplay Suggestion Skill single opponent">f99e09b1395022107f441a02d7b38dc1</parent>
        <prompt>Game Overview

You are Player 2 in a card game where your goal is to play a card into one of three Locations.

Each Location has a Location Score for each player, which is the sum of the Power values of all cards played there. You win a Location if your Location Score is higher than your opponent’s at the end of the game. You win the game by winning more Locations than your opponent.

Game Mechanics
	•	You have a Hand of Playable Cards.
	•	Each card has:
	•	A Power value, which contributes to the Location Score when played.
	•	A Cost, which determines the required Current Energy to play it.
	•	An Ability, which can be either On Reveal (triggers when played) or Ongoing (active while in play).
	•	You can only play a card if its Cost is equal to or lower than your Current Energy.  It is important that you don't play a card that exceeds your current energy budget!
  • Playing a card will reduce your Current Energy for the remainder of the turn by that amount.
  • If you have remaining Current Energy after playing a card, you can play an additional card as long as the next card is equal to or lower than your Current Energy and doesn't exceed your energy budget.
	•	Each Location has:
	•	8 Location Slots (4 for each player).
	•	A Location Ability, which may modify gameplay.
	•	Cards can only be played in Locations with available Empty Slots it is important that you don't play to a location where all the slots for your player have been consumed.

Decision Process

You must determine the optimal card to play and the optimal Location to play it in.

Your "output' should be a JSON object with the selected card and location, along with a rationale:

{
  "card_selected": "&lt;the card's ID&gt;",
  "location_selected": "&lt;the location's ID&gt;",
  "rationale": "A string describing your reason for selecting this card and location combo",
  "end_turn": &lt;true/false&gt;
}

If your current_energy is less than the cost of any the cards in your hand, return null for card_selected and location_selected and end_turn should be true.

If your current_energy is zero, then you can't play a card. Return null for card_selected and location_selected and end_turn should be true.

Your rationale should be brief and it is intended to explain to the opponent why you played it.   When identifying things like the Location or the Card, use a human readable name or location number in your explanation.  Try to add a bit of personality to your rationale to indicate whether you think you are winning, losing or neutral.

If no valid move exists, return null for card_selected and location_selected and "end_turn": true.

If "end_turn" is false, explicitly include a statement confirming how much energy remains and what potential second move could be played.

If you are playing a card and will have enough remaining energy to play ANOTHER card from your hand in your current turn after the current_energy is reduced by the cost of the card you're playing, set end_turn to false. In the rationale, say what you think the starting current energy value was, and the remaining current energy after playing the card.

If you won't have any remaining current_energy once the card is played to play another card from your hand, set end_turn to true.  Remember if you're playing a card during this turn you must subtract the cost from your current energy to determine if you have any remaining current energy!

Return ONLY the output object and nothing else.

Decision-Making Steps
	1.	Assess Cards in All Location Slots for Both Players:
	•	Identify which slots contain cards and which are Empty.
	•	Record the Power and Ability of each played card.
	•	Identify any card Abilities that might influence gameplay (e.g., Ongoing effects, On Reveal effects, power modifications).
	2.	Assess Your Current State:
	•	Record your Current Energy.
	•	Note your score at each Location.
	•	Identify any played card Abilities that might influence your decision.
	•	Identify any active Location Abilities that could impact your move.
	3.	Assess Your Opponent’s State:
	•	Record your opponent’s score at each Location.
	•	Identify any active opponent’s card Abilities in play.
	4.	Review Available Locations:
	•	Identify which Locations have Empty Slots where you can play a card.
	•	Consider how the Location Ability may impact your strategy.
	5.	Review Your Hand:
	•	Identify which cards in your Hand have a Cost ≤ Current Energy.
	•	Evaluate each card’s Power and Ability.
	•	Consider how playing each card would impact your chances of winning a Location.
	•	Subtract Energy for Multiple Plays: If playing a card, update your available energy before considering playing another. The remaining energy should be recalculated after each play.
	6.	Select the Best Card and Location:
	•	Choose the best card that maximizes your chances of winning or securing an advantage.
	•	Choose a Location where playing this card will have the most strategic benefit.
	•	If multiple options exist, prioritize based on:
	•	Maximizing your lead in a Location.
	•	Closing a gap in a contested Location.
	•	Disrupting an opponent’s advantage.
	•	Synergizing with card or Location Abilities.
	•	Consider how remaining Energy will be used. If the chosen card doesn’t consume all your Energy, keep in mind that you can play additional cards before ending your turn.
	•	Penalty for Over-budget Moves: If no valid card can be played within the remaining energy, return end_turn: true.
	•	Prioritize Spread: If you have at least one Location where you have not yet played a card, prioritize playing into that Location before adding another card to a Location where you have already played this turn.
	•	Check Location Needs: If you already have two cards in a Location and there are open slots elsewhere, evaluate whether reinforcing an existing lead is necessary or if spreading power will increase your chances of winning more Locations.
	•	Reinforce energy accounting at every step.
	•	Discourage over-committing to a single Location.
	•	Encourage balance between securing leads and contesting new Locations.


Example JSON Payload for LLM Input

Here’s an example JSON structure that includes all the necessary elements - this will be the structure of the input you receive: 

{
  "current_energy": &lt;integer&gt;,
  "locations": [
    {
      "id": "&lt;string - unique location ID&gt;",
      "location_number": &lt;integer - 1, 2, or 3&gt;,
      "name": "&lt;string - location name&gt;",
      "player_1_score": &lt;integer&gt;,
      "player_2_score": &lt;integer&gt;,
      "ability": "&lt;string - description of the location's ability&gt;",
      "slots": {
        "player_1": [
          {
            "id": "&lt;string - unique card ID&gt;",
            "name": "&lt;string - card name&gt;",
            "power": &lt;integer&gt;,
            "cost": &lt;integer&gt;,
            "ability": "&lt;string - card ability&gt;"
          },
          null,
          null,
          null
        ],
        "player_2": [
          {
            "id": "&lt;string - unique card ID&gt;",
            "name": "&lt;string - card name&gt;",
            "power": &lt;integer&gt;,
            "cost": &lt;integer&gt;,
            "ability": "&lt;string - card ability&gt;"
          },
          null,
          null,
          null
        ]
      }
    },
    {
      "id": "&lt;string - unique location ID&gt;",
      "location_number": &lt;integer - 1, 2, or 3&gt;,
      "name": "&lt;string - location name&gt;",
      "player_1_score": &lt;integer&gt;,
      "player_2_score": &lt;integer&gt;,
      "ability": "&lt;string - description of the location's ability&gt;",
      "slots": {
        "player_1": [null, null, null, null],
        "player_2": [null, null, null, null]
      }
    },
    {
      "id": "&lt;string - unique location ID&gt;",
      "location_number": &lt;integer - 1, 2, or 3&gt;,
      "name": "&lt;string - location name&gt;",
      "player_1_score": &lt;integer&gt;,
      "player_2_score": &lt;integer&gt;,
      "ability": "&lt;string - description of the location's ability&gt;",
      "slots": {
        "player_1": [
          null,
          {
            "id": "&lt;string - unique card ID&gt;",
            "name": "&lt;string - card name&gt;",
            "power": &lt;integer&gt;,
            "cost": &lt;integer&gt;,
            "ability": "&lt;string - card ability&gt;"
          },
          null,
          null
        ],
        "player_2": [null, null, null, null]
      }
    }
  ],
  "hand": [
    {
      "id": "&lt;string - unique card ID&gt;",
      "name": "&lt;string - card name&gt;",
      "power": &lt;integer&gt;,
      "cost": &lt;integer&gt;,
      "ability": "&lt;string - card ability&gt;"
    },
    {
      "id": "&lt;string - unique card ID&gt;",
      "name": "&lt;string - card name&gt;",
      "power": &lt;integer&gt;,
      "cost": &lt;integer&gt;,
      "ability": "&lt;string - card ability&gt;"
    }
  ]
}

The input for your decision is as follows - please only return the JSON string requested and no other information: 
 {{GenerateOutput.output}}</prompt>
        <prompt_template_role>user</prompt_template_role>
        <request_tokens>15134</request_tokens>
        <show_in_prompt_library>true</show_in_prompt_library>
        <state>published</state>
        <sys_class_name>sys_generative_ai_config</sys_class_name>
        <sys_created_by>kevin.clark</sys_created_by>
        <sys_created_on>2025-03-17 07:23:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ac274852475c6650089ce5e5316d43ef</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>634bcd19415022107f449aa8e6578a2c</sys_name>
        <sys_overrides/>
        <sys_package display_value="SN App" source="x_168987_flow_de_0">02b9babf4786751017fdc82f316d4368</sys_package>
        <sys_policy/>
        <sys_scope display_value="SN App">02b9babf4786751017fdc82f316d4368</sys_scope>
        <sys_update_name>sys_generative_ai_config_ac274852475c6650089ce5e5316d43ef</sys_update_name>
        <sys_updated_by>kevin.clark</sys_updated_by>
        <sys_updated_on>2025-03-17 07:44:02</sys_updated_on>
        <temperature>0.2</temperature>
        <version>4</version>
    </sys_generative_ai_config>
</record_update>
